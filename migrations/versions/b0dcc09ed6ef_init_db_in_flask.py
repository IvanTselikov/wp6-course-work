"""init db in flask

Revision ID: b0dcc09ed6ef
Revises: 
Create Date: 2023-04-27 19:46:18.219321

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b0dcc09ed6ef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ad', schema=None) as batch_op:
        batch_op.drop_constraint('ad_ibfk_5', type_='foreignkey')
        batch_op.drop_constraint('ad_ibfk_3', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['seller_id'], ['id'])
        batch_op.create_foreign_key(None, 'pts_type', ['pts_type_id'], ['id'])
        batch_op.create_foreign_key(None, 'location', ['location_id'], ['id'])
        batch_op.create_foreign_key(None, 'color', ['color_id'], ['id'])
        batch_op.create_foreign_key(None, 'modification', ['car_id'], ['id'])

    with op.batch_alter_table('ad_photo', schema=None) as batch_op:
        batch_op.drop_constraint('ad_photo_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'ad', ['ad_id'], ['id'])

    with op.batch_alter_table('characteristic', schema=None) as batch_op:
        batch_op.drop_constraint('characteristic_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'characteristic', ['parent_id'], ['id'])

    with op.batch_alter_table('characteristic_value', schema=None) as batch_op:
        batch_op.drop_constraint('characteristic_value_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('characteristic_value_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'modification', ['modification_id'], ['id'])
        batch_op.create_foreign_key(None, 'characteristic', ['characteristic_id'], ['id'])

    with op.batch_alter_table('color', schema=None) as batch_op:
        batch_op.alter_column('red',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=False)
        batch_op.alter_column('green',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=False)
        batch_op.alter_column('blue',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=False)

    with op.batch_alter_table('generation', schema=None) as batch_op:
        batch_op.drop_constraint('generation_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'model', ['model_id'], ['id'])

    with op.batch_alter_table('mark', schema=None) as batch_op:
        batch_op.alter_column('transport_type_id',
               existing_type=mysql.TINYINT(),
               nullable=True)
        batch_op.drop_constraint('mark_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'transport_type', ['transport_type_id'], ['id'])

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_constraint('message_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('message_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['sender_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['receiver_id'], ['id'])

    with op.batch_alter_table('model', schema=None) as batch_op:
        batch_op.drop_constraint('model_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mark', ['mark_id'], ['id'])

    with op.batch_alter_table('modification', schema=None) as batch_op:
        batch_op.drop_constraint('modification_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'serie', ['serie_id'], ['id'])

    with op.batch_alter_table('serie', schema=None) as batch_op:
        batch_op.drop_constraint('serie_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'generation', ['generation_id'], ['id'])

    with op.batch_alter_table('status_change', schema=None) as batch_op:
        batch_op.drop_constraint('status_change_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('status_change_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('status_change_ibfk_3', type_='foreignkey')
        batch_op.create_foreign_key(None, 'ad', ['ad_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['admin_id'], ['id'])
        batch_op.create_foreign_key(None, 'ad_status', ['status_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('login',
               existing_type=mysql.VARCHAR(length=30),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=2555),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_index('email')
        batch_op.drop_index('login')
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_login'), ['login'], unique=True)
        batch_op.drop_constraint('user_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'location', ['location_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('user_ibfk_1', 'location', ['location_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.drop_index(batch_op.f('ix_user_login'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.create_index('login', ['login'], unique=False)
        batch_op.create_index('email', ['email'], unique=False)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=255),
               type_=mysql.VARCHAR(length=2555),
               existing_nullable=False)
        batch_op.alter_column('login',
               existing_type=mysql.VARCHAR(length=20),
               type_=mysql.VARCHAR(length=30),
               existing_nullable=False)

    with op.batch_alter_table('status_change', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('status_change_ibfk_3', 'ad_status', ['status_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('status_change_ibfk_1', 'user', ['admin_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('status_change_ibfk_2', 'ad', ['ad_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('serie', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('serie_ibfk_1', 'generation', ['generation_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('modification', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('modification_ibfk_1', 'serie', ['serie_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('model', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('model_ibfk_1', 'mark', ['mark_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('message_ibfk_1', 'user', ['sender_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('message_ibfk_2', 'user', ['receiver_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('mark', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mark_ibfk_1', 'transport_type', ['transport_type_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.alter_column('transport_type_id',
               existing_type=mysql.TINYINT(),
               nullable=False)

    with op.batch_alter_table('generation', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('generation_ibfk_1', 'model', ['model_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('color', schema=None) as batch_op:
        batch_op.alter_column('blue',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=True)
        batch_op.alter_column('green',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=True)
        batch_op.alter_column('red',
               existing_type=mysql.TINYINT(unsigned=True),
               nullable=True)

    with op.batch_alter_table('characteristic_value', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('characteristic_value_ibfk_1', 'characteristic', ['characteristic_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('characteristic_value_ibfk_2', 'modification', ['modification_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('characteristic', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('characteristic_ibfk_1', 'characteristic', ['parent_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('ad_photo', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ad_photo_ibfk_1', 'ad', ['ad_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('ad', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ad_ibfk_3', 'color', ['color_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('ad_ibfk_5', 'location', ['location_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    # ### end Alembic commands ###
